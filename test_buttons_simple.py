#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุงุฎุชุจุงุฑ ุจุณูุท ููุฃุฒุฑุงุฑ
"""

def test_keyboard():
    """ุงุฎุชุจุงุฑ ุงูููุจูุฑุฏ"""
    print("=" * 60)
    print("ุงุฎุชุจุงุฑ ุงูููุจูุฑุฏ")
    print("=" * 60)
    
    # ุงูููุจูุฑุฏ ูู ุงูููุฏ
    keyboard = [
        ["โ๏ธ ุงูุฅุนุฏุงุฏุงุช", "๐ ุญุงูุฉ ุงูุญุณุงุจ"],
        ["๐ ุงูุตููุงุช ุงูููุชูุญุฉ", "๐ ุชุงุฑูุฎ ุงูุชุฏุงูู"],
        ["๐ฐ ุงููุญูุธุฉ", "๐ ุฅุญุตุงุฆูุงุช"],
        ["๐ง ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ", "๐ฏ ูุธุงู ุงูุฅุดุงุฑุงุช"]
    ]
    
    print("ุงูููุจูุฑุฏ:")
    for i, row in enumerate(keyboard, 1):
        print(f"  Row {i}: {row}")
    
    # ุงูุชุญูู ูู ุงูุฃุฒุฑุงุฑ
    all_buttons = []
    for row in keyboard:
        all_buttons.extend(row)
    
    required_buttons = ["๐ง ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ", "๐ฏ ูุธุงู ุงูุฅุดุงุฑุงุช"]
    
    print("\nุงูุชุญูู ูู ุงูุฃุฒุฑุงุฑ:")
    for button in required_buttons:
        if button in all_buttons:
            print(f"  OK: {button}")
        else:
            print(f"  MISSING: {button}")
    
    return True

def test_code():
    """ุงุฎุชุจุงุฑ ุงูููุฏ"""
    print("\n" + "=" * 60)
    print("ุงุฎุชุจุงุฑ ุงูููุฏ")
    print("=" * 60)
    
    try:
        with open('bybit_trading_bot.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # ุงูุจุญุซ ุนู ุงูุฃุฒุฑุงุฑ
        if "๐ง ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ" in content:
            print("  OK: ุฒุฑ ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ ููุฌูุฏ ูู ุงูููุฏ")
        else:
            print("  ERROR: ุฒุฑ ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ ุบูุฑ ููุฌูุฏ!")
        
        if "๐ฏ ูุธุงู ุงูุฅุดุงุฑุงุช" in content:
            print("  OK: ุฒุฑ ูุธุงู ุงูุฅุดุงุฑุงุช ููุฌูุฏ ูู ุงูููุฏ")
        else:
            print("  ERROR: ุฒุฑ ูุธุงู ุงูุฅุดุงุฑุงุช ุบูุฑ ููุฌูุฏ!")
        
        # ุงูุจุญุซ ุนู ุงููุนุงูุฌุงุช
        if 'if text == "๐ง ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ":' in content:
            print("  OK: ูุนุงูุฌ ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ ููุฌูุฏ")
        else:
            print("  ERROR: ูุนุงูุฌ ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ ุบูุฑ ููุฌูุฏ!")
        
        if 'elif text == "๐ฏ ูุธุงู ุงูุฅุดุงุฑุงุช":' in content:
            print("  OK: ูุนุงูุฌ ูุธุงู ุงูุฅุดุงุฑุงุช ููุฌูุฏ")
        else:
            print("  ERROR: ูุนุงูุฌ ูุธุงู ุงูุฅุดุงุฑุงุช ุบูุฑ ููุฌูุฏ!")
    
    except Exception as e:
        print(f"ุฎุทุฃ ูู ูุฑุงุกุฉ ุงูููู: {e}")

def test_system():
    """ุงุฎุชุจุงุฑ ุงููุธุงู"""
    print("\n" + "=" * 60)
    print("ุงุฎุชุจุงุฑ ุงููุธุงู")
    print("=" * 60)
    
    try:
        from signal_system_integration import signal_system_integration
        
        is_available = signal_system_integration.is_available()
        print(f"ุงููุธุงู ูุชุงุญ: {is_available}")
        
        if is_available:
            status = signal_system_integration.get_integration_status()
            print(f"ุงูุฅุตุฏุงุฑ: {status['version']}")
            print(f"ุงูุญุงูุฉ: {status['status']}")
            print(f"ุงูุฃูุธูุฉ: {status['available_systems']}/{status['total_systems']}")
    
    except Exception as e:
        print(f"ุฎุทุฃ: {e}")

def main():
    """ุงูุงุฎุชุจุงุฑ ุงูุฑุฆูุณู"""
    print("ุงุฎุชุจุงุฑ ุงูุฃุฒุฑุงุฑ")
    print("=" * 80)
    
    test_keyboard()
    test_code()
    test_system()
    
    print("\n" + "=" * 80)
    print("ุงูุชูู ุงูุงุฎุชุจุงุฑ")
    print("=" * 80)

if __name__ == "__main__":
    main()
