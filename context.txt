1️⃣ معلومات البوت الأساسية
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN', "7660340203:AAFSdms8_nVpHF7w6OyC0kWsNc4GJ_aIevw")
ADMIN_USER_ID = int(os.getenv('ADMIN_USER_ID', "8169000394"))  # حساب المبرمج Nagdat


الغرض: التواصل مع Telegram API لإرسال واستقبال الرسائل، أزرار التفعيل، وعرض واجهة المستخدم.

ADMIN_USER_ID لتحديد المبرمج الرئيسي وصلاحياته الخاصة.

2️⃣ هيكلة المستخدمين
2.1 بيانات المستخدم

Telegram ID واسم المستخدم.

نوع الحساب: demo / real.

رصيد الحساب التجريبي أو الحقيقي.

Webhook خاص لاستقبال إشاراته الفردية.

خيار الاشتراك في إشارات Nagdat.

بيانات API لمنصة Bybit (لحساب حقيقي).

قائمة الصفقات المفتوحة لكل مستخدم.

{
  "user_id": 123,
  "username": "ahmed",
  "mode": "demo",
  "balance": 1000,
  "activated_nagdat": true,
  "webhook_url": "https://railway.app/webhook/8a7c-93fd-21ab-1234",
  "api_key": "xxxx",
  "api_secret": "xxxx",
  "open_trades": []
}

3️⃣ نظام Webhook لكل مستخدم

استقبال إشارات BUY / SELL خاصة بكل مستخدم.

التحقق من UUID / Token قبل التنفيذ.

كل مستخدم لديه رابط Webhook فريد:

https://railway.app/user/<user_uuid>/webhook

4️⃣ إشارات المبرمج Nagdat

زر يظهر لكل المستخدمين:

⚡ تفعيل إشارة Nagdat


عند التفعيل:

المستخدم يُضاف إلى قائمة developer_followers.

الإشارات تأتي من لوحة المبرمج فقط.



5️⃣ الحساب التجريبي / الحقيقي
النوع	الوصف	طريقة التنفيذ
تجريبي (Demo)	محاكاة داخل البوت، الرصيد يُحدد	تحديث الرصيد عند تنفيذ BUY / SELL، دعم Trailing Stop وStop Loss وTake Profit، دعم Spot / Future مع رافعة، الإغلاقات الجزئية
حقيقي (Real)	تنفيذ الصفقات عبر Bybit API	استخدام API Key وSecret لتنفيذ الأوامر، إدارة Spot / Future، Trailing Stop، Stop Loss، Take Profit، الإغلاقات الجزئية
6️⃣ أنواع الصفقات

Spot (السبوت)

شراء أو بيع بسعر السوق أو محدد.

دعم الإغلاق الجزئي.

Future (الفيوتشر)

رافعة مالية من x1 إلى x20.

إدارة المخاطر:

Stop Loss

Take Profit

Trailing Stop (٪ متحرك خلف السعر)

الإغلاقات الجزئية

7️⃣ محاكاة المنصة في الحساب التجريبي

تحديث الرصيد عند تنفيذ الصفقة.

دعم Spot / Future مع رافعة مالية.

Trailing Stop يتحرك مع السعر.

Stop Loss وTake Profit تنفذ حسب السعر الفعلي.

الإغلاقات الجزئية لتقسيم الصفقة.

تحديث أسعار وأزواج العملات بشكل دوري لمحاكاة السوق الواقعي.

8️⃣ تنفيذ الصفقات الحقيقية على Bybit

Spot → شراء/بيع مباشر أو Limit Order.

Future → حساب حجم العقد حسب المبلغ × الرافعة.

إدارة الهامش (Initial / Maintenance).

دعم Trailing Stop، Stop Loss، Take Profit.

الإغلاقات الجزئية.

مراقبة الصفقات المفتوحة عبر API.

9️⃣ أدوات إدارة المخاطر
الأداة	الهدف	طريقة العمل
Stop Loss	حماية الرصيد من الخسارة	إغلاق الصفقة تلقائيًا عند السعر المحدد
Take Profit	تحقيق الأرباح	إغلاق الصفقة تلقائيًا عند الهدف المحدد
Trailing Stop	حماية الأرباح	يتحرك مع السعر لصالح المستخدم بنسبة مئوية محددة
الإغلاقات الجزئية	التحكم في حجم الصفقة	تقسيم الصفقة لغلق جزء منها مع استمرار الباقي مع المخاطر المحددة
10️⃣ تحديث الأسعار وأزواج المنصة

جلب أزواج Bybit:

REST API: GET /v2/public/symbols

تحديث الأسعار:

REST API / Websocket → GET /v2/public/tickers

تحديث أسعار كل زوج في قاعدة بيانات البوت (Cache).

الحساب التجريبي → الأسعار لتشغيل المحاكاة.

الحساب الحقيقي → الأسعار لتحديد تنفيذ الصفقة عبر API.

11️⃣ مراقبة الصفقات المفتوحة

قائمة الصفقات المفتوحة لكل حساب.

معلومات الصفقات:

نوع الصفقة (Spot / Future)

حجم الصفقة

السعر الحالي

نسبة التقدم نحو Take Profit / Stop Loss

حالة Trailing Stop

الإغلاقات الجزئية

تحديث ديناميكي للصفقات.

12️⃣ دمج الإشارات الفردية وNagdat

إشارات Webhook لكل مستخدم → تنفيذ تلقائي حسب الحساب.

إشارات Nagdat → توجيه فقط للمستخدمين المشتركين.

كل الحسابات تدعم محاكاة المنصة أو التنفيذ الحقيقي بدقة عالية.

13️⃣ فصل الصلاحيات
العنصر	من يمكنه	الصلاحيات
زر Nagdat	جميع المستخدمين	الاشتراك لتلقي إشارات فقط
إرسال إشارات Nagdat	المبرمج فقط	إرسال لجميع المشتركين
إدارة المشتركين	المبرمج فقط	عرض / حذف أي مستخدم
Webhook شخصي	كل مستخدم	استقبال إشارات خاصة فقط
الحساب التجريبي	كل مستخدم	تنفيذ محاكاة الصفقات
الحساب الحقيقي	كل مستخدم	تنفيذ الصفقات عبر API
14️⃣ نظام المطورين المنفصل

📁 الملفات الجديدة:
1️⃣ developer_manager.py - مدير المطورين
2️⃣ developer_config.py - إعدادات المطورين
3️⃣ init_developers.py - تهيئة المطورين

🗄️ الجداول الجديدة:
• developers - جدول المطورين الرئيسي
• developer_followers - متابعي كل مطور
• developer_signals - إشارات المطورين

📊 معلومات المطور الرئيسي (Nagdat):
{
    "developer_id": 8169000394,
    "developer_name": "Nagdat",
    "developer_key": "NAGDAT-KEY-2024-SECURE",
    "is_active": True,
    "can_broadcast": True
}

🔐 الصلاحيات الخاصة:
✅ إرسال إشارات لجميع المتابعين
✅ إدارة المستخدمين
✅ مشاهدة جميع الصفقات
✅ تعديل إعدادات البوت
✅ إرسال إشعارات جماعية
✅ مشاهدة الإحصائيات

🔄 نظام المتابعة:
• المستخدمون يمكنهم متابعة المطورين
• الإشارات تُرسل تلقائياً لجميع المتابعين
• كل مطور لديه قائمة متابعين منفصلة

15️⃣ سير العمل النهائي للبوت

المستخدم يفتح البوت → يظهر زر Nagdat → يمكنه الاشتراك.

المبرمج يدخل → تظهر لوحة Developer Panel → إرسال إشارات، إدارة المشتركين، محاكاة أوامر.

عند إرسال إشارة Nagdat:

توزع فقط للمستخدمين المشتركين.

تنفيذ حسب نوع الحساب.

أي مستخدم عادي لا يمكنه إرسال إشارات أو تعديل إعدادات.

البوت يلتقط إشارات Webhook الخاصة بكل مستخدم ويطبقها.

الحساب التجريبي يحاكي المنصة بالكامل.

الحساب الحقيقي ينفذ عبر Bybit API مع جميع أدوات إدارة المخاطر.

💡 النقاط الجوهرية:

دعم Spot / Future مع رافعة مالية.

Trailing Stop وStop Loss وTake Profit.

الإغلاقات الجزئية.

تحديث الأسعار والأزواج بشكل مستمر.

إشارات فردية لكل مستخدم + إشارات Nagdat.

فصل الصلاحيات بين المبرمج والمستخدمين.

مراقبة الصفقات المفتوحة لجميع الحسابات.

إذا أحببت، أستطيع أن أرسم لك مخطط مرئي احترافي شامل لكل المشروع مع كل هذه الأدوات والخصائص، بحيث يوضح:

تفرعات الإشارات (Nagdat vs المستخدم).

الحساب التجريبي والحقيقي.

أدوات إدارة المخاطر.

مراقبة الصفقات وأزواج العملات.
📘 ملف الكونتكست الكامل للـ Agent: إدارة الأهداف والستوب والإغلاقات الجزئية في التداول
# ================================
# 📖 CONTEXT: TRADE MANAGEMENT SYSTEM
# مفهوم الأهداف (Take Profit) ووقف الخسارة (Stop Loss)
# والإغلاقات الجزئية (Partial Close)
# مع طرق تنفيذها في بوتات تيليجرام للتداول
# ================================

## 🧠 القسم 1: الفكرة العامة
كل صفقة تداول تتكون من ثلاث عناصر رئيسية:
1. Entry Point: نقطة الدخول بناءً على إشارة أو تحليل.
2. Take Profit: مستوى جني الأرباح المخطط مسبقًا.
3. Stop Loss: مستوى وقف الخسارة المحدد لتقليل الضرر.

وظيفة الـ Agent هي إدارة العلاقة بين هذه العناصر بشكل ذكي ومتغير، وفق تحركات السوق.

---

## 🎯 القسم 2: TAKE PROFIT (الأهداف)

### المفهوم
- نقطة محددة مسبقًا لجني الأرباح عند وصول السعر لمستوى مرضٍ.
- يمكن أن تكون هدفًا واحدًا أو سلسلة أهداف (TP1, TP2, TP3).

### الهدف من وجودها
- تقليل العشوائية والطمع.
- تحقيق عائد محسوب مقابل المخاطرة.
- السماح بإغلاق جزئي تدريجي لتأمين الأرباح.

### منطق الـ Agent:
1. عند وصول السعر إلى TP1:
   - يغلق 50٪ من الصفقة.
   - يحرك الستوب إلى نقطة الدخول (Break-even).
2. عند TP2:
   - يغلق 30٪ إضافية.
3. عند TP3:
   - يغلق المتبقي بالكامل.
   - يسجل الصفقة كمغلقة بالكامل.

---

## 🛡️ القسم 3: STOP LOSS (وقف الخسارة)

### المفهوم
- نقطة الخروج بخسارة محددة مسبقًا لحماية رأس المال عند فشل الصفقة.

### الهدف من وجوده
- تجنب خسائر كبيرة.
- تعزيز الانضباط.
- الحفاظ على استمرارية رأس المال.

### منطق الـ Agent:
- عند كسر السعر مستوى SL:
  - يُغلق الصفقة بالكامل فورًا.
  - يسجل الفرضية كفاشلة.
  - يحلل الأسباب (للتعلم لاحقًا).

### أنواع الستوب الشائعة:
- Fixed Stop: نسبة ثابتة من سعر الدخول.
- Volatility Stop: يعتمد على ATR أو حجم التذبذب.
- Trailing Stop: يتحرك تلقائيًا مع الاتجاه الإيجابي.
- Break-even Stop: ينتقل إلى سعر الدخول عند تحقيق ربح كافٍ.

---

## ⚖️ القسم 4: PARTIAL CLOSE (الإغلاق الجزئي)

### المفهوم
- طريقة لإغلاق جزء من الصفقة عند أهداف معينة.
- توازن بين تأمين الأرباح والاستمرار في الاتجاه.

### منطق الـ Agent:
- TP1: إغلاق 50%.
- TP2: إغلاق 30%.
- TP3 أو ضعف الاتجاه: إغلاق كامل.
- في كل مرحلة، يتم تحريك SL لحماية الأرباح.

---

## 🧩 القسم 5: العلاقة بين المكونات

| العنصر | الهدف | قرار الـ Agent | التأثير |
|--------|--------|----------------|----------|
| Take Profit | جني الأرباح | تنفيذ partial close أو close all | تقليل المخاطرة |
| Stop Loss | الحماية | إغلاق فوري | حماية رأس المال |
| Partial Close | التوازن | إغلاق تدريجي | ربح آمن ومخاطرة منخفضة |

---

## ⚙️ القسم 6: المنطق البرمجي الذكي (Pseudo Logic)



IF trade_active:
IF price >= TP1:
close(50%)
move_stop_to(entry_price)
send_alert("✅ TP1 reached: partial close done")

IF price >= TP2:
    close(30%)
    send_alert("✅ TP2 reached: more profit secured")

IF price >= TP3 OR trend_reversal_detected:
    close_all()
    send_alert("🏁 Trade fully closed at TP3")

IF price <= SL:
    close_all()
    send_alert("❌ Stop Loss triggered. Trade closed.")


---

## 🤖 القسم 7: طرق تنفيذها في بوتات تيليجرام تداول

### 🧩 1. الاتصال بالمنصة
- عبر **API Keys** (مثل Binance, Bybit, MEXC).
- البوت يستخدم أوامر:
  - `POST /order` → تنفيذ صفقة.
  - `POST /order/close` → إغلاق جزئي أو كلي.
  - `GET /ticker` → مراقبة السعر الحي.

### ⚡ 2. مراقبة الأسعار
- عبر **WebSocket** لتحديث لحظي، أو **Polling** كل 5 ثوانٍ.
- عند الوصول إلى الهدف أو الستوب → ينفذ العملية مباشرة.

### 🪄 3. إدارة الأوامر
- يدعم أوامر **Limit**, **Stop**, **Market**.
- يمكن تحريك الستوب تلقائيًا (Trailing Stop).

### 📬 4. إرسال التنبيهات للمستخدم
- عند كل حدث، البوت يرسل:
  - "🎯 الهدف الأول تحقق، تم إغلاق 50٪."
  - "📉 تم تفعيل ستوب لوز."
  - "🔁 تم تحريك الستوب إلى نقطة الدخول."

### 💬 5. استقبال إشارات من القنوات
- عند تلقي رسالة مثل:


BUY BTCUSDT @60000
TP1: 61800
TP2: 62500
SL: 59400

يقوم البوت تلقائيًا بـ:
- تحديد نقاط الدخول والأهداف والستوب.
- إنشاء أوامر تنفيذ.
- تشغيل منطق المراقبة الذكية المذكور أعلاه.

### 🧠 6. الستوب الذكي (Smart SL)
- يُعدل تلقائيًا حسب تقلب السوق.
- يمكن للبوت أن يقلص المسافة بين السعر والستوب تدريجيًا مع كل هدف يتم الوصول إليه.

### 🔁 7. الإغلاق التفاعلي
- بعض البوتات تمنح المستخدم تحكمًا يدويًا:
- أزرار Inline مثل:
  - [🔒 Close 50%]  
  - [🛑 Close All]  
  - [🔁 Move SL to Entry]
- عند الضغط، يتم تنفيذ الأمر فورًا عبر API.

---

## 📊 القسم 8: قواعد إدارة المخاطرة

1. لا صفقة بدون SL أو TP.
2. يجب أن تكون نسبة R:R ≥ 1.5.
3. الإغلاق الجزئي إلزامي بعد أول هدف.
4. لا يُسمح بزيادة حجم الصفقة بعد الخسارة (تجنب مارتينجال).
5. نقل الستوب إلى التعادل عند تحقيق أول هدف.

---

## 🧭 القسم 9: الغرض النهائي للـ Agent

هدف الـ Agent أن يتصرف كـ:
- "مدير صفقات آلي ذكي"  
وليس منفذ أوامر فقط.

عليه أن:
- يفهم كل مستوى سعري في سياق خطة التداول.
- يحافظ على رأس المال أولًا.
- يدير المخاطرة والأرباح تدريجيًا.
- يتفاعل مع المستخدم عبر تيليجرام بوضوح وشفافية.
- يطبق نفس القواعد سواء في التداول اليدوي أو الآلي.

---

## ✅ القسم 10: مثال عملي

إشارة تيليجرام:


BUY ETHUSDT 3500
TP1: 3550
TP2: 3600
TP3: 3680
SL: 3450


الـ Agent يقوم بـ:
1. فتح صفقة شراء من 3500.
2. عند وصول السعر إلى 3550 → يغلق 50%.
3. عند 3600 → يغلق 30%.
4. يحرك الستوب إلى 3550.
5. عند 3680 → يغلق الباقي.
6. إذا عاد السعر إلى 3450 → يغلق بالكامل بخسارة محددة.

---

# END OF CONTEXT
