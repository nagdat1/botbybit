{
  "context_name": "MEXC_Execution_Logic",
  "version": "1.0",
  "description": "سياق برمجي تعليمي لوكيل أكواد ذكي (Agent) يشرح طريقة تنفيذ وترتيب المعاملات بدقة على منصة MEXC.",
  "purpose": "تمكين الوكيل البرمجي من فهم خطوات تنفيذ الأوامر على MEXC بدقة عالية، مع احترام القيود، وضمان الدقة، وتقليل الانزلاق.",
  "author": "Dr Nagdat Bsheer",
  "language": "ar",
  "use_case": "Order Execution, Smart Trading Bot, Crypto Exchange Integration",
  "sections": {
    "1_initialization": {
      "goal": "إعداد الاتصال مع واجهات MEXC REST و WebSocket.",
      "steps": [
        "تخزين مفاتيح API_KEY و API_SECRET بأمان.",
        "استخدام REST base URL: https://api.mexc.com",
        "إنشاء listenKey عبر /api/v3/userDataStream لمتابعة الحساب الحي.",
        "تجديد listenKey كل 30-50 دقيقة للحفاظ على الاتصال.",
        "بدء اتصال WebSocket باستخدام listenKey لتلقي تحديثات الأوامر والحساب."
      ]
    },
    "2_market_data": {
      "goal": "جمع بيانات السوق الحية لتحديد السعر المناسب للتنفيذ.",
      "sources": [
        "WebSocket stream: diff.depth لعمق السوق.",
        "REST endpoint: /api/v3/depth كنسخة احتياطية."
      ],
      "data_points": [
        "mid_price",
        "best_bid / best_ask",
        "volume",
        "orderbook liquidity"
      ]
    },
    "3_execution_strategy": {
      "goal": "تحديد نمط التنفيذ المناسب للأمر (Market / Limit / TWAP).",
      "modes": {
        "market": "تنفيذ فوري حسب سعر السوق (أسرع، لكن أكثر انزلاقًا).",
        "limit": "تنفيذ بسعر محدد لضبط التكلفة.",
        "twap": "تقسيم الأمر إلى شرائح زمنية لتقليل الأثر السعري."
      }
    },
    "4_order_slicing": {
      "goal": "تقسيم الأمر الكبير إلى شرائح صغيرة ذكية.",
      "logic": {
        "split_by": "حجم السيولة أو الوقت",
        "formula": "price = mid_price ± spread * aggressiveness",
        "params": {
          "spread": "best_ask - best_bid",
          "aggressiveness": "قيمة من 0.2 إلى 1.0 تحدد مدى قرب السعر من السوق"
        }
      },
      "example": {
        "total_volume": "100000 USDT",
        "slices": 20,
        "slice_size": "5000 USDT",
        "interval": "5-15 seconds"
      }
    },
    "5_order_submission": {
      "goal": "إرسال الطلبات إلى MEXC بأمان مع ضمان عدم التكرار.",
      "endpoint": "/api/v3/order",
      "method": "POST",
      "signing": "HMAC SHA256 باستخدام API_SECRET",
      "payload_example": {
        "symbol": "BTCUSDT",
        "side": "BUY",
        "type": "LIMIT",
        "quantity": "0.01",
        "price": "67890.00",
        "timeInForce": "GTC",
        "clientOrderId": "agent-123456"
      },
      "idempotency_rule": "لا تُرسل نفس الطلب مرتين قبل التأكد من حالته عبر clientOrderId."
    },
    "6_order_monitoring": {
      "goal": "مراقبة حالة كل شريحة من الأوامر.",
      "methods": [
        "WebSocket listenKey stream لتحديثات فورية.",
        "REST GET /api/v3/order كنسخة احتياطية."
      ],
      "status_handling": {
        "FILLED": "تم التنفيذ الكامل.",
        "PARTIALLY_FILLED": "انتظر أو عدّل السعر.",
        "CANCELED": "أعد الإرسال بسعر جديد.",
        "REJECTED": "راجع الإعدادات أو السوق."
      },
      "timeout_action": "إذا لم يُنفّذ خلال 10 ثوانٍ → إلغاء وإعادة تقديم بسعر مختلف."
    },
    "7_rate_limit_and_retry": {
      "goal": "التحكم في السرعة واحترام قيود MEXC.",
      "limits": {
        "REST": "حتى 5 طلبات/ثانية لكل حساب.",
        "WebSocket": "حتى 100 رسالة/ثانية لكل اتصال."
      },
      "errors": {
        "429": "توقف مؤقت (backoff) ثم إعادة المحاولة بعد فترة.",
        "5xx": "استعلم عن حالة الطلب أولاً قبل الإعادة."
      }
    },
    "8_risk_control": {
      "goal": "حساب الكمية بناءً على المخاطرة المقبولة.",
      "formula": "position_size = (account_balance * risk%) / stop_loss_distance",
      "circuit_breaker": "إيقاف التنفيذ إذا تحرك السعر أكثر من 1% أثناء العملية."
    },
    "9_logging_and_reports": {
      "goal": "توثيق كل عملية تنفيذ وتحليل الأداء.",
      "log_fields": [
        "clientOrderId",
        "symbol",
        "side",
        "price",
        "quantity",
        "status",
        "timestamp"
      ],
      "reports": [
        "إجمالي الحجم المنفذ",
        "متوسط سعر التنفيذ",
        "نسبة الانزلاق",
        "عدد الأوامر الناجحة والفاشلة"
      ]
    },
    "10_adaptive_intelligence": {
      "goal": "تمكين الذكاء التكيفي للوكيل.",
      "behaviors": [
        "تسريع التنفيذ عند انخفاض السيولة.",
        "إبطاء التنفيذ عند تقلب السوق.",
        "التحويل من Limit إلى Market في الحالات الطارئة.",
        "إيقاف التنفيذ عند تجاوز مستوى الخطر."
      ]
    }
  },
  "output_expectations": {
    "summary": [
      "ملف سجل تنفيذي مفصل (Execution Log)",
      "تنبيهات لحظية عبر تيليجرام أو واجهة المستخدم",
      "مؤشرات أداء مثل السرعة والدقة والانزلاق"
    ]
  }
}
