#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ููู ุชุดุบูู ุจูุช ุงูุชุฏุงูู ูุน ุงูุณูุฑูุฑ ุงููุญูู ูุงููุงุฌูุฉ ุงูููุจ
ูุญุฏุซ ููุนูู ุนูู Railway
"""

import sys
import os
import threading
import asyncio
from datetime import datetime

# ุฅุถุงูุฉ ุงููุณุงุฑ ุงูุญุงูู ุฅูู ูุณุงุฑุงุช Python
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ูุชุดุบูู ุงูุจูุช ูุงูุณูุฑูุฑ"""
    try:
        print("๐ ุจุฏุก ุชุดุบูู ุจูุช ุงูุชุฏุงูู ูุน ุงูุณูุฑูุฑ...")
        print(f"โฐ ุงูููุช: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        
        # ุทุจุงุนุฉ ูุชุบูุฑุงุช ุงูุจูุฆุฉ ุงููููุฉ ููุชุตุญูุญ
        print(f"๐ง PORT environment variable: {os.environ.get('PORT', 'Not set')}")
        print(f"๐ง RAILWAY_PROJECT_ID: {os.environ.get('RAILWAY_PROJECT_ID', 'Not set')}")
        print(f"๐ง RAILWAY_PUBLIC_URL: {os.environ.get('RAILWAY_PUBLIC_URL', 'Not set')}")
        
        # ุงุณุชูุฑุงุฏ ุงููุญุฏุงุช ุงููุทููุจุฉ
        from bybit_trading_bot import trading_bot, main as bot_main
        from web_server import WebServer
        
        # ุฅูุดุงุก ุงูุณูุฑูุฑ ูุฑุจุทู ุจุงูุจูุช
        web_server = WebServer(trading_bot)
        # ุชุนููู ุงูุณูุฑูุฑ ููุจูุช ุจุงุณุชุฎุฏุงู setattr ูุชุฌูุจ ุฃุฎุทุงุก linter
        setattr(trading_bot, 'web_server', web_server)
        
        print("๐ ุฅุนุฏุงุฏ ุงูุณูุฑูุฑ ุงููุญูู...")
        
        # ุงูุญุตูู ุนูู ูููุฐ Railway ุฃู ุงุณุชุฎุฏุงู 5000 ูุงูุชุฑุงุถู
        port = int(os.environ.get('PORT', 5000))
        
        # ุชุดุบูู ุงูุณูุฑูุฑ ูู thread ูููุตู
        server_thread = threading.Thread(
            target=lambda: web_server.run(host='0.0.0.0', port=port, debug=False), 
            daemon=True
        )
        server_thread.start()
        
        print(f"โ ุชู ุชุดุบูู ุงูุณูุฑูุฑ ุจูุฌุงุญ ุนูู ุงููููุฐ {port}")
        print("๐ค ุจุฏุก ุชุดุบูู ุจูุช ุงูุชูุฌุฑุงู...")
        
        # ุชุดุบูู ุงูุจูุช ุงูุฑุฆูุณู
        # ุฅูุดุงุก event loop ุฌุฏูุฏ ููุจูุช
        try:
            # For Windows compatibility
            asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
        except:
            pass
            
        # ุชุดุบูู ุงูุจูุช ูู ุงูู event loop ุงูุฑุฆูุณู
        bot_main()
        
    except KeyboardInterrupt:
        print("\nโน๏ธ ุชู ุฅููุงู ุงูุจูุช ูุงูุณูุฑูุฑ ุจูุงุณุทุฉ ุงููุณุชุฎุฏู")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุชุดุบูู ุงูุจูุช: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()